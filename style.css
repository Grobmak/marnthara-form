@import url('https://fonts.googleapis.com/css2?family=Kanit:wght@300;400;500;600&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200');

:root {
    --bg-color: #f0f2f5;
    --primary-color: #6200EE;
    --primary-light: #BB86FC;
    --secondary-color: #03DAC6;
    --surface-color: #ffffff;
    --on-surface: #1e1e1e;
    --on-surface-variant: #6b6b6b;
    --card-bg: rgba(255, 255, 255, 0.5);
    --border-color: rgba(255, 255, 255, 0.2);
    --shadow-color: rgba(0, 0, 0, 0.1);
    --success-color: #4CAF50;
    --warning-color: #FFC107;
    --error-color: #F44336;
    --suspended-bg: rgba(255, 255, 255, 0.2);
}

* {
    box-sizing: border-box;
    font-family: 'Kanit', sans-serif;
}

body {
    margin: 0;
    padding: 0;
    background: linear-gradient(135deg, var(--primary-light), var(--secondary-color));
    color: var(--on-surface);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    padding-top: 2rem;
}

.container {
    width: 100%;
    max-width: 800px;
    padding: 1rem;
}

h1, h2, h3 {
    font-weight: 500;
}

.card {
    background: var(--card-bg);
    backdrop-filter: blur(10px);
    border: 1px solid var(--border-color);
    border-radius: 20px;
    padding: 1.5rem;
    margin-bottom: 1rem;
    box-shadow: 0 8px 32px var(--shadow-color);
    transition: all 0.3s ease;
}

.card.is-suspended {
    background: var(--suspended-bg);
    border-color: rgba(255, 255, 255, 0.1);
    opacity: 0.7;
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
}

.header h1 {
    margin: 0;
    font-size: 1.5rem;
    font-weight: 600;
}

.summary-card {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
}

.summary-item {
    padding: 1rem;
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.2);
    text-align: center;
}

.summary-label {
    font-size: 0.8rem;
    color: var(--on-surface-variant);
    margin-bottom: 0.2rem;
}

.summary-value {
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--on-surface);
}

.summary-price {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--primary-color);
}

.summary-card .summary-item:first-child {
    grid-column: 1 / -1;
}

.room-card, .item-card {
    position: relative;
    padding: 1.5rem;
}

.room-card-header, .item-card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
}

.room-card-header h2 {
    font-size: 1.2rem;
    font-weight: 600;
    margin: 0;
}

.item-card-header h3 {
    font-size: 1rem;
    font-weight: 600;
    margin: 0;
}

.item-card-header .item-title {
    background: rgba(0, 0, 0, 0.1);
    color: white;
    font-size: 0.8rem;
    font-weight: 600;
    border-radius: 10px;
    padding: 0.2rem 0.5rem;
    min-width: 25px;
    text-align: center;
}

.menu-dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    background: var(--surface-color);
    border-radius: 8px;
    box-shadow: 0 4px 16px var(--shadow-color);
    z-index: 10;
    transform: translateY(10px);
    opacity: 0;
    visibility: hidden;
    transition: transform 0.2s ease, opacity 0.2s ease;
}

.menu-dropdown.show {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
}

.menu-dropdown button {
    width: 100%;
    text-align: left;
    background: none;
    border: none;
    padding: 0.75rem 1rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.menu-dropdown button:hover {
    background: #f0f0f0;
}

.menu-dropdown button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.form-group {
    margin-bottom: 1rem;
}

label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
}

input[type="text"], input[type="number"], textarea, select {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 1px solid var(--border-color);
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.5);
    font-size: 1rem;
    color: var(--on-surface);
    transition: all 0.3s ease;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

input[type="text"]:focus, input[type="number"]:focus, textarea:focus, select:focus {
    outline: none;
    background: var(--surface-color);
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(98, 0, 238, 0.2);
}

select {
    padding-right: 2.5rem;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-chevron-down'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 1rem center;
    background-size: 1.2rem;
}

.form-row {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
}

.form-row .form-group {
    flex: 1;
    margin-bottom: 0;
}

.room-actions, .item-actions {
    display: flex;
    gap: 0.5rem;
}

.btn {
    background: var(--primary-color);
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 12px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

.btn:hover {
    background: #5b00d6;
}

.btn:disabled {
    background: #cccccc;
    cursor: not-allowed;
}

.btn-icon {
    background: none;
    border: none;
    color: var(--on-surface-variant);
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
}

.btn-icon:hover {
    background: rgba(0, 0, 0, 0.05);
}

.btn-icon.is-primary {
    color: var(--primary-color);
}

.btn-icon.is-danger {
    color: var(--error-color);
}

.btn-icon.is-warning {
    color: var(--warning-color);
}

.btn-outline {
    background: none;
    border: 1px solid var(--primary-color);
    color: var(--primary-color);
}

.btn-outline:hover {
    background: var(--primary-color);
    color: white;
}

.grand-total {
    text-align: right;
    font-size: 2rem;
    font-weight: 600;
    margin-top: 1rem;
    color: var(--primary-color);
}

.input-group {
    display: flex;
    align-items: center;
}

.input-group input {
    flex: 1;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right: none;
}

.input-group span {
    background: rgba(255, 255, 255, 0.7);
    padding: 0.75rem 1rem;
    border: 1px solid var(--border-color);
    border-left: none;
    border-top-right-radius: 12px;
    border-bottom-right-radius: 12px;
    color: var(--on-surface-variant);
    font-size: 1rem;
    font-weight: 500;
}

.item-summary {
    background: rgba(255, 255, 255, 0.7);
    border-radius: 12px;
    padding: 0.75rem 1rem;
    margin-top: 1rem;
    font-size: 0.9rem;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem 1rem;
}

.item-summary .price {
    font-weight: 600;
    color: var(--primary-color);
}

.item-summary .num {
    font-weight: 600;
}

.hidden {
    display: none !important;
}

.toast-container {
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    z-index: 1000;
}

.toast {
    background: #333;
    color: white;
    padding: 1rem 1.5rem;
    border-radius: 8px;
    font-size: 0.9rem;
    transform: translateX(120%);
    opacity: 0;
    transition: transform 0.3s ease, opacity 0.3s ease;
}

.toast.show {
    transform: translateX(0);
    opacity: 1;
}

.toast-success { background: var(--success-color); }
.toast-warning { background: var(--warning-color); }
.toast-error { background: var(--error-color); }

.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.4);
    backdrop-filter: blur(5px);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 100;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
}

.modal.visible {
    opacity: 1;
    visibility: visible;
}

.modal-content {
    background: var(--surface-color);
    border-radius: 20px;
    padding: 2rem;
    max-width: 450px;
    width: 90%;
    transform: translateY(-20px);
    transition: transform 0.3s ease;
}

.modal.visible .modal-content {
    transform: translateY(0);
}

.modal-content h2 {
    margin-top: 0;
    font-size: 1.5rem;
}

.modal-buttons {
    display: flex;
    justify-content: flex-end;
    gap: 0.5rem;
    margin-top: 1.5rem;
}

.form-check {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
}

.form-check input {
    width: 20px;
    height: 20px;
}

/* Specific styles for different item types */
.set-card .form-row.three-col .form-group {
    flex: none;
    width: calc(33.333% - 0.666rem);
}

.set-card .form-row.three-col .form-group:first-child,
.set-card .form-row.three-col .form-group:nth-child(2) {
    width: 100%; /* Spans full width on small screens */
}

.set-card .form-row.three-col {
    flex-wrap: wrap;
}

@media (min-width: 768px) {
    .set-card .form-row.three-col {
        flex-wrap: nowrap;
    }
}

.add-btn {
    width: 100%;
    background: rgba(255, 255, 255, 0.5);
    border: 1px dashed var(--on-surface-variant);
    color: var(--on-surface-variant);
    margin-top: 1rem;
}

.add-btn:hover {
    background: rgba(255, 255, 255, 0.7);
    border-color: var(--primary-color);
    color: var(--primary-color);
}

.wall-input-row {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    margin-bottom: 0.5rem;
}
.wall-input-row .form-group {
    flex: 1;
}

.footer {
    text-align: center;
    margin-top: 2rem;
    font-size: 0.8rem;
    color: rgba(255, 255, 255, 0.7);
}

body.is-locked .btn-icon,
body.is-locked input:not([disabled]),
body.is-locked select:not([disabled]),
body.is-locked textarea:not([disabled]) {
    cursor: not-allowed;
    pointer-events: none;
}